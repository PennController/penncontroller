PennController.ResetPrefix(null) // Shorten command names (keep this line here)

newDot = (color,diameter="24px") => newCanvas(color, diameter, diameter).color(color).css("border-radius","100%");
getDot = name=>getCanvas(name)
// coordinates
matrix = (width=600,height=400,step=28)=>[...new Array(parseInt(width/step))].map( (v,i) =>
    [...new Array(parseInt(height/step))].map( (w,n) => Object({x: i*step, y: n*step}) )
).flat()

newTrial(newButton("start").print().wait())

newTrial(
    fullscreen()
    ,
    defaultText.color("white").css("font-size","3em")
    ,
    newSelector("dots").disable()
    ,
    newCanvas("background", "100vw","100vh").color("gray").print(0,0)
    ,
    newText("sentence", "Qualche cerchio Ã¨ verde").css({
        "text-align": "center",
        "max-width": "20em"
    })
    ,
    positions = matrix(),fisherYates(positions)
    ,
    newCanvas("container", 800,600)
        .add( "center at 50%", "top at 5%" , getText("sentence") )
        .add( 100+positions[0].x, 100+positions[0].y, newDot("#50C878").selector("dots") )
        .add( 100+positions[1].x, 100+positions[1].y, newDot("#008000").selector("dots") )
        .add( 100+positions[2].x, 100+positions[2].y, newDot("#00A36C").selector("dots") )
        .add( 100+positions[3].x, 100+positions[3].y, newDot("#811331").selector("dots"))
        .add( 100+positions[4].x, 100+positions[4].y, newDot("#C41E3A").selector("dots"))
        .add( 100+positions[5].x, 100+positions[5].y, newDot("t","#800020").selector("dots"))
        .add( 100+positions[6].x, 100+positions[6].y, newDot("#800020").selector("dots"))
        .add( "left at 10%" , "bottom at 95%", newText("VERO") )
        .add( "right at 90%" , "bottom at 95%", newText("FALSO") )
        .print("center at 50vw","middle at 50vh")
        .scaling("auto","100vh")
    ,
    getSelector("dots").shuffle()
    ,
    newKey("FJ").log().wait().disable()
    ,
    getCanvas("container").hidden()
    ,
    newTimer(500).start().wait() // gray screen
    ,
    getDot("t").color("#AFE1AF")
    ,
    getText("sentence").text("Uno dei cerchi verdi ha cambiato colore")
    ,
    getCanvas("container").visible()
    ,
    getKey("FJ").enable().wait()
)

// Working on shuffle with before/after
newTrial(
    newCanvas("blue",200,200).color("blue").after(newCanvas("red",200,200).color("red")).print()
    ,
    newSelector("select").add(getCanvas("blue"),getCanvas("red")).frame("solid 2px purple").shuffle()
    ,
    newButton("finish").print().log().wait()
)
.noTrialLog()

// newTrial(
//     newCanvas("container","100vw","2em").print()
//     ,
//     newController("ds","DashedSentence", {s: "This is a test", display: "in place"})
//         .css("font-weight","bold")
//         // .print( "center at 50%","middle at 50%", getCanvas("container") )
//         .print( "center at 50%","middle at 50%" )
//         .wait()
//         .remove()
//     ,
//     newButton("next").print().wait().remove()
//     ,
//     getController("ds")
//         .print()
//         .wait()
//     ,
//     getButton("next").wait()
// )


// Sequence(
//     "trial1",
//     "trial2",
//     "trial3",
//     "trial4",
//     "trial5"
// )

// AddTable("jumps",`label,jumps
// trial1,trial1:trial2:trial3:trial4:trial5
// trial2,trial1:trial2:trial3:trial4:trial5
// trial3,trial1:trial2:trial3:trial4:trial5
// trial4,trial1:trial2:trial3:trial4:trial5
// trial5,trial1:trial2:trial3:trial4:trial5`)

// Template( "jumps" ,  row=>newTrial( row.label,
//     newText(row.label).print()
//     ,
//     newTooltip("flash","").label(""),newTimer("timeout",2000)
//     ,
//     ...row.jumps.split(":").map(j=>newButton("Jump to "+j).callback(
//         jump(j),
//         getTooltip("flash").text("Next trial will be <em>"+j+"</em>").print("center at 50vw","middle at 50vh"),
//         getTimer("timeout").start().wait(),
//         getTooltip("flash").remove()
//     ).print())
//     ,
//     newButton("Next trial").print().wait()
// ) )


